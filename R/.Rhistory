j <- 36
# alpha = 0.05 & power = 0.8
t_stat <- 1.96 + 9.842
# allocation ratio = 1
P <- 0.5
#Power Adjustment
mde <- t_stat * sqrt(1/(P * (1 - P) * j)) * sqrt(rho + (1 - rho)/m) * control_sd
#mde_ldv <- t_stat * sqrt(1/(P * (1 - P) * j)) * sqrt(rho + (1 - rho)/m) * res_control_sd
n <- j * m # # of ppl
treated <- n * P
#mdes <- c(0.05, 0.8, rho, j, m, n, treated, control_mean, control_sd, mde, 0.05,
#    0.8, rho, j, m, n, treated, control_mean, control_sd, mde_ldv)
#table_names <- list(c("No_controls", "Control_LDV"), c("Signif", "Power", "ICC",
#    "Clusters", "Cluster_size", "N", "Treated", "Cntrl_mn", "Cntrl_SD", "MDE"))
#mde_table <- matrix(data = mdes, nrow = 2, ncol = 10, byrow = 2, dimnames = table_names)
smaller_treated_mean2 <- control_mean + mde
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
mde
rho
(mde/0.4)^2
1/rho
x<-(mde/0.4)^2
y<1/rho
y<-1/rho
((1/x)*(26-((x-1)/rho)))^2+1
# # of ppl per cluster
m <- 32
# # of clusters
j <- 36
# alpha = 0.05 & power = 0.8
t_stat <- 1.96 + 9.842
# allocation ratio = 1
P <- 0.5
#Power Adjustment
mde <- t_stat * sqrt(1/(P * (1 - P) * j)) * sqrt(rho + (1 - rho)/m) * control_sd
#mde_ldv <- t_stat * sqrt(1/(P * (1 - P) * j)) * sqrt(rho + (1 - rho)/m) * res_control_sd
n <- j * m # # of ppl
treated <- n * P
#mdes <- c(0.05, 0.8, rho, j, m, n, treated, control_mean, control_sd, mde, 0.05,
#    0.8, rho, j, m, n, treated, control_mean, control_sd, mde_ldv)
#table_names <- list(c("No_controls", "Control_LDV"), c("Signif", "Power", "ICC",
#    "Clusters", "Cluster_size", "N", "Treated", "Cntrl_mn", "Cntrl_SD", "MDE"))
#mde_table <- matrix(data = mdes, nrow = 2, ncol = 10, byrow = 2, dimnames = table_names)
smaller_treated_mean2 <- control_mean + mde
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = 36, rho = rho)
#mde_table <- matrix(data = mdes, nrow = 2, ncol = 10, byrow = 2, dimnames = table_names)
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = 33, rho = rho)
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = 45, rho = rho)
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = 30, rho = rho)
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = 25, rho = rho)
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = 20, rho = rho)
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = 21, rho = rho)
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = 18, rho = rho)
control_mean <- mean(subset(balsakhi$post_mathnorm, balsakhi$bal == 0), na.rm = TRUE)
control_sd <- sd(subset(balsakhi$post_mathnorm, balsakhi$bal == 0), na.rm = TRUE)
control_subset <- subset(balsakhi, bal == 0 & !is.na(divid) & !is.na(post_mathnorm))
control_subset$divid = as.factor(control_subset$divid)
icc <- ICCest(divid, post_mathnorm, data = control_subset)
rho <- icc$ICC
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = 18, rho = rho)
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = 20, rho = rho)
mde <- t_stat * sqrt(1/(P * (1 - P) * j)) * sqrt(rho + (1 - rho)/20) * control_sd
mde
smaller_treated_mean2
t_stat <- 1.96 + 0.842
t_stat * sqrt(1/(P * (1 - P) * j)) * sqrt(rho + (1 - rho)/20) * control_sd
t_stat * sqrt(1/(P * (1 - P) * j)) * sqrt(rho + (1 - rho)/21) * control_sd
t_stat * sqrt(1/(P * (1 - P) * j)) * sqrt(rho + (1 - rho)/19) * control_sd
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = 19, rho = rho)
View(twomeans)
m <- 20
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans <- twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 20
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
?twomeans
m <- 35
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 45
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 55
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 30
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 27
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 26
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 20
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 25
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 24
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 23
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 22
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 23
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 10
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 20
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 35
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 55
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 40
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 45
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 50
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 30
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 10
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 5
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 15
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 12
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 10
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 11
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 10
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 60
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
m <- 5
smaller_treated_mean2 <- control_mean + control_sd*0.4
twomeans(m1 = control_mean, m2 = smaller_treated_mean2, sd = control_sd)%>%clustered(obsclus = m, rho = rho)
rm(ls())
rm(list(ls))
rm(list = ls())
ls()
library(tidyverse)
inpres <- as_tibble(read_csv("/Users/luxres/Downloads/inpres_data.csv"))
library(tidyverse)
inpres <- as_tibble(read_csv("/Users/luxres/Downloads/inpres_data.csv"))
install.packages("dummies")
install.packages("AER")
library(dummies)
library(AER)
linearMod <- lm(log_wage ~ education, data=inpres)
View(linearMod)
?lm
str(inpres)
inpres$birth_year <- inpres$birth_year > 67
inpres
summary(inpres)
inpres_A <- filter(inpres, birth_year == FALSE, high_intensity = 0)
inpres_A <- filter(inpres, birth_year == FALSE, high_intensity == 0)
mean(inpres_A$education)
inpres_B <- filter(inpres, birth_year == TRUE, high_intensity == 0)
mean(inpres_B$education)
inpres_E <- filter(inpres, birth_year == TRUE, high_intensity == 1)
mean(inpres_E$education)
inpres_D <- filter(inpres, birth_year == FALSE, high_intensity == 1)
mean(inpres_D$education)
mean(filter(inpres, birth_year == TRUE, high_intensity == 1)$education)
mean(filter(inpres, birth_year == TRUE, high_intensity == 1)$log_wage)
- mean(filter(inpres, birth_year == FALSE, high_intensity == 1)$log_wage)
10^(mean(filter(inpres, birth_year == TRUE, high_intensity == 1)$log_wage))
- 10^(mean(filter(inpres, birth_year == FALSE, high_intensity == 1)$log_wage))
e^(mean(filter(inpres, birth_year == TRUE, high_intensity == 1)$log_wage))
- e^(mean(filter(inpres, birth_year == FALSE, high_intensity == 1)$log_wage))
(mean(filter(inpres, birth_year == TRUE, high_intensity == 1)$log_wage))
- (mean(filter(inpres, birth_year == FALSE, high_intensity == 1)$log_wage))
(mean(filter(inpres, birth_year == TRUE, high_intensity == 1)$log_wage)) - (mean(filter(inpres, birth_year == FALSE, high_intensity == 1)$log_wage))
(mean(filter(inpres, birth_year == TRUE, high_intensity == 1)$log_wage)) - (mean(filter(inpres, birth_year == FALSE, high_intensity == 1)$log_wage))
(mean(filter(inpres, birth_year == TRUE, high_intensity == 1)$log_wage))
(mean(filter(inpres, birth_year == FALSE, high_intensity == 1)$log_wage))
(mean(filter(inpres, birth_year == TRUE, high_intensity == 1)$education))-(mean(filter(inpres, birth_year == TRUE, high_intensity == 0)$education))
(mean(filter(inpres, birth_year == TRUE && high_intensity == 1)$education))-(mean(filter(inpres, birth_year == TRUE && high_intensity == 0)$education))
(mean(filter(inpres, birth_year == TRUE & high_intensity == 1)$education))-(mean(filter(inpres, birth_year == TRUE & high_intensity == 0)$education))
(mean(filter(inpres, birth_year == TRUE & high_intensity == 1)$education))
(mean(filter(inpres, birth_year == TRUE & high_intensity == 0)$education))
haha <- filter(inpres, birth_year == TRUE & high_intensity == 0)
mean(haha$education)
haha <- filter(inpres, birth_year == TRUE & high_intensity == 0)
(mean(filter(inpres, birth_year == TRUE & high_intensity == 1)$education))-mean(haha$education)
haha <- filter(inpres, birth_year == FALSE & high_intensity == 1)
(mean(filter(inpres, birth_year == TRUE & high_intensity == 1)$education))-mean(haha$education)
impact_program = lm(education ~ high_intensity, data = inpres)
summary(impact_program)
education
mean(filter(inpres, birth_year == TRUE & high_intensity == 1)$log_wage)
mean(filter(inpres, birth_year == FALSE & high_intensity == 1)$log_wage)
mean(filter(inpres, birth_year == FALSE & high_intensity == 0)$log_wage)
mean(filter(inpres, birth_year == TRUE & high_intensity == 0)$log_wage)
mean(filter(inpres, birth_year == FALSE & high_intensity == 1)$log_wage)
mean(filter(inpres, birth_year == TRUE & high_intensity == 1)$log_wage)
mean(filter(inpres, birth_year == FALSE & high_intensity == 0)$log_wage)
e <- mean(filter(inpres, birth_year == TRUE & high_intensity == 1)$log_wage)
a <- mean(filter(inpres, birth_year == FALSE & high_intensity == 0)$log_wage)
d <- mean(filter(inpres, birth_year == FALSE & high_intensity == 1)$log_wage)
b <- mean(filter(inpres, birth_year == TRUE & high_intensity == 0)$log_wage)
a - b
c <- a - b
f <- d - e
f
a
b
d
e
a-d
b-e
c-f
c <- a - b
c
a-b
f
g-h
a-d
b-e
ls()
rm(ls())
?rm
rm(ls())
rm("ls(")
rm(ls)
remove(ls())
library(tidyverse)
teaData <- as_tibble(read_csv("/Users/luxres/Downloads/tea_data.csv"))
teaData$teaDum <- (teaData$teasown > 0)
teaData$Post <- (teaData$biryr > 1979)
install.packages("lfe")
real_theta <- 5
sample_size <- 100
number_simulations <- 100000
simulations1 <- matrix(runif(sample_size*XXX, max = real_theta),
nrow = number_simulations)
estimator_mean <- 2*apply(simulations1, 1, mean)
estimator_median <- 2*apply(simulations1, 1, XXX)
p1 <- hist(estimator_mean, breaks = 100)
p2 <- hist(estimator_median, breaks = 100)
range <- range(p1$mids, p2$mids )
p1$XXX = p1$density
p2$counts = p2$XXX
pdf("histogram1.pdf")
plot( p1, col=rgb(1,0,0,1/4), xlim = range, xlab = "values", ylab = "density")
plot( p2, col=rgb(0,0,1,1/4), add = XXX)
dev.off()
install.packages("mvtnorm")
install.packages("mvtnorm")
install.packages("mvtnorm")
1+1
rm(list=ls())
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/config.R')
library(wordcloud2)
library(tidyverse)
library(magrittr)
library(tidytext)
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/analysis.R')
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/data.R')
d <- get_debate()
setwd("~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan")
d <- get_debate()
wordcloud2(prepare_word_cloud(d, "biden"))
wordcloud2(prepare_word_cloud_common(d, "biden"))
biden <- prepare_word_cloud(d, "biden")
biden2 <- prepare_word_cloud_common(d, "biden")
View(biden)
View(biden2)
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/analysis.R')
biden2 <- prepare_word_cloud_common(d, "biden")
biden <- prepare_word_cloud(d, "biden", wallace = F)
View(biden2)
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/analysis.R')
biden <- prepare_word_cloud(d, "biden", wallace = F)
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/analysis.R')
biden <- prepare_word_cloud(d, "biden", wallace = F)
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/analysis.R')
biden <- prepare_word_cloud(d, "biden", wallace = F)
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/analysis.R')
biden <- prepare_word_cloud(d, "biden", common = F)
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/analysis.R')
biden <- prepare_word_cloud(d, "biden", common = F)
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/analysis.R')
biden <- prepare_word_cloud(d, "biden", common = F)
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/analysis.R')
biden2 <- prepare_word_cloud_common(d, "biden")
rm(biden)
rm(biden2)
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/config.R')
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/data.R')
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/data.R')
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/data_munge.R')
dir()
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/data_munge.R')
source('~/Desktop/Georgetown/Classes/Programming/Lecture 6/HW6/HW6_Doan/R/data.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/data.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
setwd("~/Dropbox/Homeworks/HW6/HW6_Doan")
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/data.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/data.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/data.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
setwd("~/Dropbox/Homeworks/HW6/HW6_Doan")
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/config.R')
dir()
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/configuration.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/data.R')
bidenWallace <- total_word_counts(debate, c("Wallace", "Biden"))
source('configuration.R')
debate <- get_debate()
head(get_word_counts(debate, "biden"))
bidenWallace <- total_word_counts(debate, c("Wallace", "Biden"))
arrange(bidenWallace, desc(count))
head(bidenWallace)
bidenWallace <- total_word_counts(debate, c("Wallace", "Biden")) %>%
arrange(desc(count))
head(bidenWallace)
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
wordcloud2(prepare_word_cloud(d, "biden"))
setwd("~/Dropbox/Homeworks/HW6/HW6_Doan/R")
wordcloud2(prepare_word_cloud(d, "biden"))
wordcloud2(prepare_word_cloud(d, "biden", weightCommon = 0.00001))
words <- c("Apple", "facebook", "faked", "done", "divided")
clean_words(words)
words <- c("Apple", "facebook", "faked", "been", "divided")
clean_words(words)
words <- c("Apple", "faked", "been", "divided", "they're")
clean_words(words)
words <- c("Apple", "faked", "been", "divided", "they’re")
clean_words(words)
bidenWallace <- total_word_counts(debate, c("Wallace", "Biden")) %>%
arrange(desc(count))
head(bidenWallace)
debate <- get_debate()
head(get_word_counts(debate, "biden"))
words <- c("Apple", "faked", "been", "went", "they’re")
clean_words(words)
whatBidenSaid <- prepare_word_cloud(debate, "biden")
head(whatBidenSaid)
whatTrumpSaid <- prepare_word_cloud(debate, "trump")
head(whatTrumpSaid)
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/data.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/data_munge.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/data_munge.R')
whatTrumpSaid <- prepare_word_cloud(debate, "trump")
head(whatTrumpSaid)
whatBidenSaid <- prepare_word_cloud(debate, "biden")
head(whatBidenSaid)
dir()
bidenImg <- "../images/biden.png"
wordcloud2(whatBidenSaid, figPath = bidenImg)
bidenImg <- "../images/biden.png"
wordcloud2(whatBidenSaid, figPath = bidenImg, color = "skyblue")
bidenImg <- image("../images/biden.png")
bidenImg <- file("../images/biden.png")
wordcloud2(whatBidenSaid, figPath = bidenImg, color = "skyblue")
bidenImg <- file("../images/biden.png")
wordcloud2(whatBidenSaid, figPath = bidenImg, color = "skyblue")
getwd()
bidenImg <- "../images/biden.png"
wordcloud2(whatBidenSaid, figPath = bidenImg, color = "skyblue")
bidenImg <- "../images/biden.png"
wordcloud2(whatBidenSaid, figPath = bidenImg, color = "skyblue")
bidenImg <- system.file("../images/biden.png", package = "wordcloud2")
wordcloud2(whatBidenSaid, figPath = bidenImg, color = "skyblue")
bidenImg <- "../images/biden.png"
wordcloud2(whatBidenSaid, figPath = bidenImg, color = "skyblue")
bidenImg <- "../images/biden.png"
wordcloud2(whatBidenSaid, figPath = bidenImg, color = "skyblue")
wordcloud2(whatBidenSaid, color = "skyblue")
wordcloud2(whatBidenSaid, color = "skyblue")
wordcloud2(whatBidenSaid, color = "skyblue")
wordcloud2(whatBidenSaid, color = "skyblue")
wordcloud2(whatBidenSaid, color = "skyblue")
whatBidenSaid <- prepare_word_cloud(debate, "biden")
head(whatBidenSaid)
wordcloud2(whatBidenSaid, color = "skyblue")
wordcloud2(whatBidenSaid, color = "blue")
bidenWC <- wordcloud2(whatBidenSaid, color = "blue") %>%
saveWidget("../images/biden.html", selfcontained = F)
library(webshot)
install.packages("webshot")
library(webshot)
library(htmlwidgets)
bidenWC <- wordcloud2(whatBidenSaid, color = "blue") %>%
saveWidget("../images/biden.html", selfcontained = F)
webshot("../images/biden.html", "../images/biden.png", delay = 5, vwidth = 2000, vheight = 1000)
webshot::install_phantomjs()
bidenWC <- wordcloud2(whatBidenSaid, color = "blue") %>%
saveWidget("../images/biden.html", selfcontained = F)
webshot("../images/biden.html", "../images/biden.png", delay = 5, vwidth = 2000, vheight = 1000)
bidenWC <- wordcloud2(whatBidenSaid, size = 1.5, color = "blue") %>%
saveWidget("../images/biden.html", selfcontained = F)
webshot("../images/biden.html", "../images/biden.png", delay = 5, vwidth = 2000, vheight = 1000)
bidenWC <- wordcloud2(whatBidenSaid, size = 1.5, color = "random-light", backgroundColor = "azure") %>%
saveWidget("../images/biden.html", selfcontained = F)
webshot("../images/biden.html", "../images/biden.png", delay = 5, vwidth = 2000, vheight = 1000)
words <- c("Apple", "faked", "been", "went", "they’re")
verbs[[2]] %in% words -> thisTense
which(verbs[[2]] %in% words) -> thisTense
which(verbs[[3]] %in% words) -> thisTense
which(verbs[[4]] %in% words) -> thisTense
which(verbs[[5]] %in% words) -> thisTense
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
clean_wordsx(words) -> words
words[c(1,4)] <- verbs[[1]][c(3,2,1)]
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
View(clean_wordsx)
whatBidenSaid <- prepare_word_cloud(debate, "biden", wallace = F)
head(whatBidenSaid)
View(whatBidenSaid)
whatTrumpSaid <- prepare_word_cloud(debate, "trump", wallace = F)
head(whatTrumpSaid)
View(bidenWallace)
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
source('configuration.R')
debate <- get_debate()
head(get_word_counts(debate, "biden"))
bidenWallace <- total_word_counts(debate, c("Wallace", "Biden")) %>%
arrange(desc(count))
head(bidenWallace)
words <- c("Apple", "faked", "been", "went", "they’re")
clean_words(words)
whatBidenSaid <- prepare_word_cloud(debate, "biden")
head(whatBidenSaid)
whatTrumpSaid <- prepare_word_cloud(debate, "trump")
head(whatTrumpSaid)
bidenWC <- wordcloud2(whatBidenSaid, size = 1.5, color = "random-light", backgroundColor = "blue") %>%
saveWidget("../images/biden.html", selfcontained = F)
webshot("../images/biden.html", "../images/biden.png", delay = 5, vwidth = 2000, vheight = 1500)
trumpWC <- wordcloud2(whatTrumpSaid, size = 1.5, color = "random-dark", backgroundColor = "red") %>%
saveWidget("../images/trump.html", selfcontained = F)
webshot("../images/trump.html", "../images/trump.png", delay = 5, vwidth = 2000, vheight = 1500)
whatBidenSaid <- prepare_word_cloud(debate, "biden", wallace = F)
head(whatBidenSaid)
whatTrumpSaid <- prepare_word_cloud(debate, "trump", wallace = F)
head(whatTrumpSaid)
wordcloud2(prepare_word_cloud(d, "trump"))
wordcloud2(prepare_word_cloud(d, "trump", weightCommon = 0.00001))
wordcloud2(prepare_word_cloud(d, "biden", weightCommon = 0.00001))
wordcloud2(prepare_word_cloud(d, "biden", common = F))
wordcloud2(prepare_word_cloud(d, "trump", weightCommon = 0.00001))
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
str_remove_all("aaabbb", c("a", "b"))
str_remove_all("aaabbb", "a & b"
str_remove_all("aaabbb", "a & b")
str_remove_all("aaabbb", "a && b")
str_remove_all("aaabbb", "a" &"b")
str_remove_all("aaabbb", "a|b")
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
clean_words(words)
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
clean_words(words)
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
clean_words(words)
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
source('~/Dropbox/Homeworks/HW6/HW6_Doan/R/analysis.R')
